Glide.with(mActivity)
                    .load(LQZImageUrl.getUserIconUrl(d.getUid(), 1))
                    .centerCrop()
                    .transform(new GlideCircleTransform(mActivity.getApplicationContext()))
                    .placeholder(R.drawable.circle_bg_gray)
                    .diskCacheStrategy(DiskCacheStrategy.ALL)
//                    .crossFade()//淡入淡出
                    .dontAnimate()//不做动画
                    .into(h.userIcon);

//            DiskCacheStrategy.NONE 什么都不缓存
//            DiskCacheStrategy.SOURCE 仅仅只缓存原来的全分辨率的图像
//            DiskCacheStrategy.RESULT 仅仅缓存最终的图像，即降低分辨率后的（或者是转换后的）
//            DiskCacheStrategy.ALL 缓存所有版本的图像（默认行为）
//            crossFade()默认动画，fitCenter()，placeholder()占位图，error()错误图，空图
//            清除缓存：Glide.get(this).clearMemory();
//            Glide.get(this).clearDiskCache(); 需要在子线程执行
            //自定义图片大小--px
//            .override(600, 200) // resizes the image to these dimensions (in pixel). does not respect aspect ratio

//            获取Bitmap  SimpleTarget
//            Glide.with(ShopActivity.this)
//                    .load("http://dn-qpos-box.qbox.me/hqs.jpg").asBitmap()
//                    .into(new SimpleTarget<Bitmap>() {
//                        @Override
//                        public void onResourceReady(Bitmap bitmap,
//                                                    GlideAnimation<? super Bitmap> glideAnimation) {
//                            int width = bitmap.getWidth();
//                            int height = bitmap.getHeight();
//                            LayoutParams lp = img.getLayoutParams();
//                            lp.width = SysEnv.SCREEN_WIDTH;
//                            float tempHeight=height * ((float)lp.width / width);
//                            lp.height =(int)tempHeight ;
//                            img.setLayoutParams(lp);
//                            img.setImageBitmap(bitmap);
//                            img_content.addView(img);
//                        }
//                    });